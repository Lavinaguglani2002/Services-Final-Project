{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Allied\\\\Desktop\\\\Serviceproject\\\\client\\\\src\\\\components\\\\PrivateRoute.js\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children\n}) => {\n  const user = localStorage.getItem(\"USER\");\n  return user ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 30\n  }, this);\n};\n_c = PrivateRoute;\nexport default PrivateRoute;\n\n// import { Navigate } from \"react-router-dom\";\n\n// const PrivateRoute = ({ children, allowedRole }) => {\n//   const user = localStorage.getItem(\"USER\");\n//   const role = localStorage.getItem(\"Role\");\n//   console.log(\"PrivateRoute → USER:\", user);\n//   console.log(\"PrivateRoute → ROLE:\", role);\n//   console.log(\"PrivateRoute → ALLOWED ROLE:\", allowedRole);\n\n//   // If user is not logged in\n//   if (!user) return <Navigate to=\"/login\" />;\n\n//   // If allowedRole is provided, check for match\n//   if (allowedRole && role !== allowedRole) {\n//     alert(\"Access Denied: Unauthorized Role\");\n//     return <Navigate to=\"/login\" />;\n//   }\n\n//   return children;\n// };\n\n// export default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["Navigate","jsxDEV","_jsxDEV","PrivateRoute","children","user","localStorage","getItem","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Allied/Desktop/Serviceproject/client/src/components/PrivateRoute.js"],"sourcesContent":["import { Navigate } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ children }) => {\r\n    const user = localStorage.getItem(\"USER\");\r\n    return user ? children : <Navigate to=\"/login\" />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n\r\n\r\n\r\n\r\n// import { Navigate } from \"react-router-dom\";\r\n\r\n// const PrivateRoute = ({ children, allowedRole }) => {\r\n//   const user = localStorage.getItem(\"USER\");\r\n//   const role = localStorage.getItem(\"Role\");\r\n//   console.log(\"PrivateRoute → USER:\", user);\r\n//   console.log(\"PrivateRoute → ROLE:\", role);\r\n//   console.log(\"PrivateRoute → ALLOWED ROLE:\", allowedRole);\r\n\r\n\r\n//   // If user is not logged in\r\n//   if (!user) return <Navigate to=\"/login\" />;\r\n\r\n//   // If allowedRole is provided, check for match\r\n//   if (allowedRole && role !== allowedRole) {\r\n//     alert(\"Access Denied: Unauthorized Role\");\r\n//     return <Navigate to=\"/login\" />;\r\n//   }\r\n\r\n//   return children;\r\n// };\r\n\r\n// export default PrivateRoute;\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACnC,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EACzC,OAAOF,IAAI,GAAGD,QAAQ,gBAAGF,OAAA,CAACF,QAAQ;IAACQ,EAAE,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrD,CAAC;AAACC,EAAA,GAHIV,YAAY;AAKlB,eAAeA,YAAY;;AAK3B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}