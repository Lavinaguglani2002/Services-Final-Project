{"ast":null,"code":"import{Navigate}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";const PrivateRoute=_ref=>{let{children}=_ref;const user=localStorage.getItem(\"USER\");return user?children:/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});};export default PrivateRoute;// import { Navigate } from \"react-router-dom\";\n// const PrivateRoute = ({ children, allowedRole }) => {\n//   const user = localStorage.getItem(\"USER\");\n//   const role = localStorage.getItem(\"Role\");\n//   console.log(\"PrivateRoute → USER:\", user);\n//   console.log(\"PrivateRoute → ROLE:\", role);\n//   console.log(\"PrivateRoute → ALLOWED ROLE:\", allowedRole);\n//   // If user is not logged in\n//   if (!user) return <Navigate to=\"/login\" />;\n//   // If allowedRole is provided, check for match\n//   if (allowedRole && role !== allowedRole) {\n//     alert(\"Access Denied: Unauthorized Role\");\n//     return <Navigate to=\"/login\" />;\n//   }\n//   return children;\n// };\n// export default PrivateRoute;","map":{"version":3,"names":["Navigate","jsx","_jsx","PrivateRoute","_ref","children","user","localStorage","getItem","to"],"sources":["C:/Users/Allied/Desktop/Serviceproject/client/src/components/PrivateRoute.js"],"sourcesContent":["import { Navigate } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ children }) => {\r\n    const user = localStorage.getItem(\"USER\");\r\n    return user ? children : <Navigate to=\"/login\" />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n\r\n\r\n\r\n\r\n// import { Navigate } from \"react-router-dom\";\r\n\r\n// const PrivateRoute = ({ children, allowedRole }) => {\r\n//   const user = localStorage.getItem(\"USER\");\r\n//   const role = localStorage.getItem(\"Role\");\r\n//   console.log(\"PrivateRoute → USER:\", user);\r\n//   console.log(\"PrivateRoute → ROLE:\", role);\r\n//   console.log(\"PrivateRoute → ALLOWED ROLE:\", allowedRole);\r\n\r\n\r\n//   // If user is not logged in\r\n//   if (!user) return <Navigate to=\"/login\" />;\r\n\r\n//   // If allowedRole is provided, check for match\r\n//   if (allowedRole && role !== allowedRole) {\r\n//     alert(\"Access Denied: Unauthorized Role\");\r\n//     return <Navigate to=\"/login\" />;\r\n//   }\r\n\r\n//   return children;\r\n// };\r\n\r\n// export default PrivateRoute;\r\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE5C,KAAM,CAAAC,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC9B,KAAM,CAAAE,IAAI,CAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CACzC,MAAO,CAAAF,IAAI,CAAGD,QAAQ,cAAGH,IAAA,CAACF,QAAQ,EAACS,EAAE,CAAC,QAAQ,CAAE,CAAC,CACrD,CAAC,CAED,cAAe,CAAAN,YAAY,CAK3B;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}