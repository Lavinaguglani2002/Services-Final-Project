{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Allied\\\\Desktop\\\\Serviceproject\\\\client\\\\src\\\\components\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport api from '../axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const {\n    id,\n    token\n  } = useParams();\n  //params is a parameter that passing to the routes jo humne url main pass kiya hai id and token that is param\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await api.post(`/resetpassword/${id}/${token}`, {\n        password\n      });\n\n      // On success, handle the response\n      if (response.status === 200) {\n        alert(\"Password reset successfully\");\n        navigate(\"/login\");\n        setPassword(\"\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-center align-items-center vh-100\",\n    style: {\n      background: \"linear-gradient(135deg, #667eea, #764ba2)\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"p-4 shadow rounded bg-white\",\n      style: {\n        width: \"90%\",\n        maxWidth: \"400px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center mb-4\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          placeholder: \"Enter password\",\n          value: password,\n          required: true,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary w-100\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(ResetPassword, \"q9n/hbUYHI1wm11E/9hiGOASlCY=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","Link","useNavigate","useParams","api","jsxDEV","_jsxDEV","ResetPassword","_s","password","setPassword","navigate","id","token","handleSubmit","e","preventDefault","response","post","status","alert","err","console","log","className","style","background","children","onSubmit","width","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","required","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/Allied/Desktop/Serviceproject/client/src/components/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport api from '../axios';\r\n\r\nconst ResetPassword = () => {\r\n    const [password, setPassword] = useState(\"\");\r\n    const navigate = useNavigate();\r\n    const {id,token}=useParams()\r\n    //params is a parameter that passing to the routes jo humne url main pass kiya hai id and token that is param\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await api.post(`/resetpassword/${id}/${token}`, { password });\r\n            \r\n            // On success, handle the response\r\n            if (response.status === 200) {\r\n                alert(\"Password reset successfully\");\r\n                navigate(\"/login\");\r\n                setPassword(\"\"); \r\n            }\r\n        } catch (err) {\r\nconsole.log(err)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-center align-items-center vh-100\" style={{ background: \"linear-gradient(135deg, #667eea, #764ba2)\" }}>\r\n            <form onSubmit={handleSubmit} className=\"p-4 shadow rounded bg-white\" style={{ width: \"90%\", maxWidth: \"400px\" }}>\r\n                <h2 className=\"text-center mb-4\">Reset Password</h2>\r\n                <div className=\"mb-3\">\r\n                    <label className=\"form-label\">New Password</label>\r\n                    <input \r\n                        type=\"password\" \r\n                        className=\"form-control\" \r\n                        placeholder=\"Enter password\" \r\n                        value={password} \r\n                        required \r\n                        onChange={(e) => setPassword(e.target.value)} \r\n                    />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary w-100\">Update</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAC/D,OAAOC,GAAG,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM;IAACU,EAAE;IAACC;EAAK,CAAC,GAACV,SAAS,CAAC,CAAC;EAC5B;;EAEA,MAAMW,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMb,GAAG,CAACc,IAAI,CAAC,kBAAkBN,EAAE,IAAIC,KAAK,EAAE,EAAE;QAAEJ;MAAS,CAAC,CAAC;;MAE9E;MACA,IAAIQ,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QACzBC,KAAK,CAAC,6BAA6B,CAAC;QACpCT,QAAQ,CAAC,QAAQ,CAAC;QAClBD,WAAW,CAAC,EAAE,CAAC;MACnB;IACJ,CAAC,CAAC,OAAOW,GAAG,EAAE;MACtBC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IACR;EACJ,CAAC;EAED,oBACIf,OAAA;IAAKkB,SAAS,EAAC,yDAAyD;IAACC,KAAK,EAAE;MAAEC,UAAU,EAAE;IAA4C,CAAE;IAAAC,QAAA,eACxIrB,OAAA;MAAMsB,QAAQ,EAAEd,YAAa;MAACU,SAAS,EAAC,6BAA6B;MAACC,KAAK,EAAE;QAAEI,KAAK,EAAE,KAAK;QAAEC,QAAQ,EAAE;MAAQ,CAAE;MAAAH,QAAA,gBAC7GrB,OAAA;QAAIkB,SAAS,EAAC,kBAAkB;QAAAG,QAAA,EAAC;MAAc;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpD5B,OAAA;QAAKkB,SAAS,EAAC,MAAM;QAAAG,QAAA,gBACjBrB,OAAA;UAAOkB,SAAS,EAAC,YAAY;UAAAG,QAAA,EAAC;QAAY;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAClD5B,OAAA;UACI6B,IAAI,EAAC,UAAU;UACfX,SAAS,EAAC,cAAc;UACxBY,WAAW,EAAC,gBAAgB;UAC5BC,KAAK,EAAE5B,QAAS;UAChB6B,QAAQ;UACRC,QAAQ,EAAGxB,CAAC,IAAKL,WAAW,CAACK,CAAC,CAACyB,MAAM,CAACH,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACN5B,OAAA;QAAQ6B,IAAI,EAAC,QAAQ;QAACX,SAAS,EAAC,uBAAuB;QAAAG,QAAA,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAC1B,EAAA,CAzCID,aAAa;EAAA,QAEEL,WAAW,EACXC,SAAS;AAAA;AAAAsC,EAAA,GAHxBlC,aAAa;AA2CnB,eAAeA,aAAa;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}